# Generated by Django 5.2.7 on 2025-10-04 17:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=10)),
                ('content', models.TextField()),
                ('retrieval_context', models.TextField(blank=True, null=True)),
                ('scraped_sources', models.TextField(blank=True, null=True)),
                ('llm_model_used', models.CharField(blank=True, max_length=50, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('has_audio', models.BooleanField(default=False)),
                ('audio_file', models.CharField(blank=True, max_length=255, null=True)),
                ('has_diagram', models.BooleanField(default=False)),
                ('diagram_file', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='tutor.conversation')),
            ],
        ),
        migrations.CreateModel(
            name='QueryCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('query_text', models.TextField()),
                ('grade', models.IntegerField()),
                ('response', models.TextField()),
                ('retrieval_context', models.TextField(blank=True, null=True)),
                ('hit_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['query_hash', 'grade'], name='tutor_query_query_h_9a0386_idx')],
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('grade', models.IntegerField(choices=[(5, 'Class 5'), (6, 'Class 6'), (7, 'Class 7'), (8, 'Class 8'), (9, 'Class 9'), (10, 'Class 10')], default=5)),
                ('total_queries', models.IntegerField(default=0)),
                ('successful_interactions', models.IntegerField(default=0)),
                ('struggle_count', models.IntegerField(default=0)),
                ('current_difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=20)),
                ('preferred_learning_style', models.CharField(choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('text', 'Text-based'), ('mixed', 'Mixed')], default='mixed', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
                ('topic', models.CharField(max_length=100)),
                ('resource_type', models.CharField(choices=[('video', 'Video'), ('article', 'Article'), ('ncert_link', 'NCERT Link'), ('practice', 'Practice Problems'), ('game', 'Educational Game')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('clicked', models.BooleanField(default=False)),
                ('found_helpful', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='tutor.studentprofile')),
            ],
        ),
        migrations.AddField(
            model_name='conversation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='tutor.studentprofile'),
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
                ('topic', models.CharField(max_length=100)),
                ('queries_on_topic', models.IntegerField(default=1)),
                ('understood', models.BooleanField(default=False)),
                ('needed_simpler_explanation', models.BooleanField(default=False)),
                ('asked_for_resources', models.BooleanField(default=False)),
                ('follow_up_questions', models.IntegerField(default=0)),
                ('time_spent', models.FloatField(default=0.0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='tutor.studentprofile')),
            ],
            options={
                'verbose_name_plural': 'Learning Analytics',
                'indexes': [models.Index(fields=['student', 'subject', 'topic'], name='tutor_learn_student_97fe71_idx')],
            },
        ),
    ]
